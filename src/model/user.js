const mongoose = require('mongoose')
let UserSchema

const schema = {
  _id: false,
  username: String,
  cna_short_name: String,
  secret: String,
  UUID: String,
  active: Boolean,
  name: {
    first: String,
    last: String,
    middle: String,
    surname: String,
    suffix: String
  },
  time: {
    created: Date,
    modified: Date
  }
}

if (process.env.POPULATE === 'true') {
  UserSchema = new mongoose.Schema(schema, { collection: 'User' })
} else {
  UserSchema = new mongoose.Schema(schema, { collection: 'User', timestamps: { createdAt: 'time.created', updatedAt: 'time.modified' } })
}

UserSchema.query.byUserName = function (username) {
  return this.where({ username: new RegExp('^' + username + '$', 'i') }) // match username exactly (case insensitive)
}

UserSchema.query.byUserNameAndCnaShortName = function (username, cnaShortName) {
  return this.where({ username: new RegExp('^' + username + '$', 'i'), cna_short_name: new RegExp('^' + cnaShortName + '$', 'i') }) // match username and cnaShortName exactly (case insensitive)
}

const User = mongoose.model('User', UserSchema)
module.exports = User
