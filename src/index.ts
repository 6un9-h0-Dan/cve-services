import "reflect-metadata";
import * as express from "express";
import * as bodyParser from "body-parser";
import { Request, Response } from "express";
import { Routes } from "./routes";
import * as dotenv from "dotenv";
import * as logger from "morgan";
import * as cors from "cors";
import * as helmet from "helmet";
import { verifyRequester } from "./middlewares/verification";

const app = express();
const configed = dotenv.config();

//*********Middleware Config*********** */
app.use(cors()); //adding Cross-origin resource sharing.
app.use(logger("dev")); //creates logs
app.use(helmet()); //gives standard security
app.use(bodyParser.json()); //parses incoming json
app.use(verifyRequester); //This is where we would verify Users trying to request access/data

// setup Routes for app here
Routes.forEach(route => {
  (app as any)[route.method](
    route.route,
    (req: Request, res: Response, next: Function) => {
      const result = new (route.controller as any)()[route.action](
        req,
        res,
        next
      );
      if (result instanceof Promise) {
        result.then(result =>
          result !== null && result !== undefined ? res.send(result) : undefined
        );
      } else if (result !== null && result !== undefined) {
        res.json(result);
      }
    }
  );
});

// start express server
app.listen(process.env.port);

app.use(function(err, req, res, next) {
  res.status(500).send({ error: err });
});

console.log("Express server has started on port", process.env.port);
