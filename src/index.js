const express = require('express');
const bodyParser = require('body-parser');
const config = require('config');
const cors = require('cors');
const morgan = require('morgan');
const mongoose = require('mongoose');
const helmet = require('helmet');
const dotenv = require('dotenv');
const configureRoutes = require('./routes.config');
const app = express();
const configed = dotenv.config(); //This enables us to read from the .env file.

app.use(morgan('combined'));
app.use(bodyParser.json()); //parses incoming json
app.use(cors());
app.use(helmet()); //gives standard security <https://www.npmjs.com/package/helmet>
configureRoutes(app)
// Make mongoose connection available globally
global.mongoose = mongoose;


//*********Middleware Config*********** */
//if (process.env.NODE_ENV === 'dev') app.use(logger('dev')); //creates logs when NODE ENV is set to dev
//app.use(verifyRequester); //This is where we would verify Users trying to request access/data
//*********Middleware Config END*********** */

//*********API Routes Setup*********** */
//configureRoutes(app); //configure app routes

app.use(express.static('client-dist'))
app.use('/*', express.static('client-dist'))
var port = process.env.PORT || config.get('port');
  app.listen(port);
  console.log('Serving on port ' + port)

// const dbConnectionStr = (config.has('database.username') && config.has('database.userpass')) ?
//   `mongodb://${config.get('database.username')}:${config.get('database.userpass')}@${config.get('database.host')}:${config.get('database.port')}/${config.get('database.name')}`:
//   `mongodb://${config.get('database.host')}:${config.get('database.port')}/${config.get('database.name')}`;

// mongoose.connect(dbConnectionStr, {useNewUrlParser: true,  useUnifiedTopology: true });
// var db = mongoose.connection;
// db.on('error', console.error.bind(console, 'connection error:'));
// db.once('open', function() {
//     // we're connected!
//   console.log(`Successfully connected to database ${config.get('database.name')} at ${config.get('database.host')}:${config.get('database.port')}`);
//   var port = process.env.PORT || config.get('port');
//   app.listen(port);
//   console.log('Serving on port ' + port)
// });