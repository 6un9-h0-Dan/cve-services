import * as jwt from 'jsonwebtoken';
import { dbOperations } from '../database/db-operations';

export const verifyRequester = async (req, res, next) => {
    const regex = /(^\/health-check|\/user-auth)/g; // Place route names here that dont need authentication

    try {
        if (!new RegExp(regex).test(req.originalUrl)) {
            const token = req.headers.authorization;
            if (!token) return res.status(403).send({ auth: false, message: 'No token provided.' });
            dbOperations
                .checkJWTRecord(token)
                .then(tokenValid => {
                    jwt.verify(token, process.env.SECRET_WORD, function(err, decoded) {
                        if (err)
                            return res.status(500).send({
                                auth: false,
                                message: 'Failed to authenticate token.',
                            });

                        const { userUUID, userEmail, userUName, userOrganizationUUID } = decoded;
                        req.userUUID = userUUID;
                        req.userEmail = userEmail;
                        req.userUName = userUName;
                        req.userOrgUUID = userOrganizationUUID;
                        next();
                    });
                })
                .catch(error => {
                    return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });
                });
        } else {
            next();
        }
    } catch (err) {
        return res.status(500).send({ auth: false, message: 'Failed to authenticate token.' });
    }
};
