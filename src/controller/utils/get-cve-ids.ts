import * as uuidv4 from "uuid/v4";

export const getCVEID = {
  getID(count, year, req, status) {
    var yearFlag = false;
    var countFlag = false;
    var statusFlag = false;
    //TODO: Still need to add UserName.
    //TODO: Still need to add Org Name
    if (year) {
      yearFlag = true;
    }
    if (count) {
      countFlag = true;
    }
    if (status) {
      statusFlag = true;
    }
    var cveobj = [];

    if (countFlag) {
      for (let i = 0; i < count; i++) {
        const cveIdObject = {
          cve_id: "",
          status: "",
          Requestor: { user_id: "", user_name: "" },
          Organization: { org_id: "", org_name: "" },
          History: "TBD"
        };
        if (yearFlag) {
          if (statusFlag) {
            cveIdObject.Requestor.user_id = req.userUUID;
            cveIdObject.Organization.org_id = req.userOrgUUID;
            cveIdObject.status = status;
            cveIdObject.cve_id = "CVE-" + year + "-" + uuidv4();
            cveobj.push(cveIdObject);
          } else {
            cveIdObject.Requestor.user_id = req.userUUID;
            cveIdObject.Organization.org_id = req.userOrgUUID;
            cveIdObject.status = "Reserved";
            cveIdObject.cve_id = "CVE-" + year + "-" + uuidv4();

            cveobj.push(cveIdObject);
          }
        } else {
          if (statusFlag) {
            cveIdObject.Requestor.user_id = req.userUUID;
            cveIdObject.Organization.org_id = req.userOrgUUID;
            cveIdObject.status = status;
            let date = new Date();
            cveIdObject.cve_id = "CVE-" + date.getFullYear() + "-" + uuidv4();
            cveobj.push(cveIdObject);
          } else {
            cveIdObject.Requestor.user_id = req.userUUID;
            cveIdObject.Organization.org_id = req.userOrgUUID;
            cveIdObject.status = "Reserved";
            let date = new Date();
            cveIdObject.cve_id = "CVE-" + date.getFullYear() + "-" + uuidv4();
            cveobj.push(cveIdObject);
          }
        }
      }
    } else {
      const cveIdObject = {
        cve_id: "",
        status: "",
        Requestor: { user_id: "", user_name: "" },
        Organization: { org_id: "", org_name: "" },
        History: "TBD"
      };
      if (yearFlag) {
        if (statusFlag) {
          cveIdObject.Requestor.user_id = req.userUUID;
          cveIdObject.Organization.org_id = req.userOrgUUID;
          cveIdObject.status = status;
          cveIdObject.cve_id = "CVE-" + year + "-" + uuidv4();
          cveobj.push(cveIdObject);
        } else {
          cveIdObject.Requestor.user_id = req.userUUID;
          cveIdObject.Organization.org_id = req.userOrgUUID;
          cveIdObject.status = "Reserved";
          cveIdObject.cve_id = "CVE-" + year + "-" + uuidv4();
          cveobj.push(cveIdObject);
        }
      } else {
        if (statusFlag) {
          cveIdObject.Requestor.user_id = req.userUUID;
          cveIdObject.Organization.org_id = req.userOrgUUID;
          cveIdObject.status = status;
          let date = new Date();
          cveIdObject.cve_id = "CVE-" + date.getFullYear() + "-" + uuidv4();
          cveobj.push(cveIdObject);
        } else {
          cveIdObject.Requestor.user_id = req.userUUID;
          cveIdObject.Organization.org_id = req.userOrgUUID;
          cveIdObject.status = "Reserved";
          let date = new Date();
          cveIdObject.cve_id = "CVE-" + date.getFullYear() + "-" + uuidv4();
          cveobj.push(cveIdObject);
        }
      }
    }
    return cveobj;
  }
};
