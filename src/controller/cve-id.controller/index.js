const express = require('express')
const router = express.Router()
const mw = require('../../middleware/middleware')
const controller = require('./cve-id.controller')
const { check } = require('express-validator')
const { parseGetParams, parsePostParams, parseError, toDate } = require('./cve-id.middleware')

const CHOICES = ['REJECT', 'PUBLIC', 'RESERVED']

router.get('/cve-id',
        mw.validateUser,
        check(['state']).optional().isString().trim().escape().customSanitizer(val => {return val.toUpperCase()}).isIn(CHOICES),
        check(['cve_id_year']).optional().isNumeric(),
        check(['time_reserved.lt']).optional().isString().trim().escape().customSanitizer(val => {return toDate(val)}).not().isEmpty(),
        check(['time_reserved.gt']).optional().isString().trim().escape().customSanitizer(val => {return toDate(val)}).not().isEmpty(),
        parseError,
        parseGetParams,
        controller.CVEID_GET_FILTER)
router.post('/cve-id',
        mw.validateUser,
        mw.onlyCnas,
        check(['amount']).isInt(),
        check(['batch_type']).optional().isString().trim().escape().customSanitizer(val => {return val.toLowerCase()}),
        check(['short_name']).isString().trim().escape(),
        check(['cve_year']).isNumeric(),
        parseError,
        parsePostParams,
        controller.CVEID_RESERVE)
router.get('/cve-id/:id',
        mw.validateUser,
        check(['id']).isString().trim().escape(),
        parseError,
        parseGetParams,
        controller.CVEID_GET_SINGLE)
router.post('/cve-id/:id',
        mw.onlySecretariat,
        mw.validateUser,
        check(['id']).isString().trim().escape(),
        check(['state']).isString().trim().escape().customSanitizer(val => {return val.toUpperCase()}).isIn(CHOICES),
        check(['cna']).isString().trim().escape(),
        parseError,
        parsePostParams,
        controller.CVEID_UPDATE_SINGLE)
router.post('/cve-id-range/:year',
        mw.onlySecretariat,
        mw.validateUser,
        check(['year']).isNumeric(),
        parseError,
        parsePostParams,
        controller.CVEID_RANGE_CREATE)

module.exports = router
