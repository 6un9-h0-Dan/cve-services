const express = require('express')
const router = express.Router()
const mw = require('../../middleware/middleware')
const controller = require('./org.controller')
const { check } = require('express-validator')
const { parseError, parsePostParams } = require('./org.middleware')

router.get('/org', mw.onlySecretariat, mw.validateUser, controller.CNA_ALL)
router.post('/org', mw.onlySecretariat, mw.validateUser, controller.CNA_CREATE_SINGLE)

router.get('/org/:shortname', mw.onlySecretariat, mw.validateUser, controller.CNA_SINGLE)
router.post('/org/:shortname', mw.onlySecretariat, mw.validateUser, controller.CNA_UPDATE_SINGLE)
router.post('/org/:shortname/unblock_reservation',
    mw.onlySecretariat,
    mw.validateUser,
    check(['shortname']).isString().trim().escape(),
    parseError,
    parsePostParams,
    controller.unblock_reservation)

router.post('/org/:shortname/user', mw.onlySecretariat, mw.validateUser, controller.USER_CREATE_SINGLE)

router.get('/org/:shortname/user/:username', mw.onlySecretariat, mw.validateUser, controller.USER_SINGLE)

router.post('/org/:shortname/user/:username', mw.onlySecretariat, mw.validateUser, controller.USER_UPDATE_SINGLE)
router.post('/org/:shortname/user/:username/reset_secret', mw.onlySecretariat, mw.validateUser, controller.USER_RESET_SECRET)

router.get('/org/:shortname/id_quota', mw.validateUser, controller.ORG_ID_QUOTA)

module.exports = router
