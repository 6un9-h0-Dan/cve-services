const idrErr = require('../../utils/error')

class OrgControllerError extends idrErr.IDRError {
  cnaDneParam (shortname) { // org
    const err = {}
    err.error = 'CNA_DNE_PARAM'
    err.message = `The CNA '${shortname}' designated by the shortname parameter does not exist.`
    return err
  }

  userDne (username) { // org
    const err = {}
    err.error = 'USER_DNE'
    err.message = `The user '${username}' designated by the username parameter does not exist.`
    return err
  }

  notOwnerOrSecretariat () { // org
    const err = {}
    err.error = 'NOT_OWNER_OR_SECRETARIAT'
    err.message = 'This information can only be viewed by the owning CNA or the Secretariat.'
    return err
  }

  cnaExists (shortname) { // org
    const err = {}
    err.error = 'CNA_EXISTS'
    err.message = `The CNA '${shortname}' already exists.`
    return err
  }

  userExists (username) { // org
    const err = {}
    err.error = 'USER_EXISTS'
    err.message = `The user '${username}' already exists.`
    return err
  }

  shortnameMismatch (shortname, shortnameBody) { // org
    const err = {}
    err.error = 'SHORTNAME_MISMATCH'
    err.message = `The CNA '${shortname}' designated by the username parameter does not match the username '${shortnameBody}' in the JSON body.`
    return err
  }

  duplicateUsername (shortname, username) { // org
    const err = {}
    err.error = 'DUPLICATE_USERNAME'
    err.message = `The user could not be updated because CNA '${shortname}' contains another user with the username '${username}'.`
    return err
  }

  duplicateShortname (shortname) { // org
    const err = {}
    err.error = 'DUPLICATE_SHORTNAME'
    err.message = `CNA can not be renamed as '${shortname}' because this shortname is used by another CNA.`
    return err
  }
}

module.exports = {
  OrgControllerError
}
