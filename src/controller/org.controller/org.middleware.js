const logger = require('../../middleware/logger')
const CONSTANTS = require('../../constants')
const { validationResult } = require('express-validator')
const errors = require('./error')
const error = new errors.OrgControllerError()

function isOrgRole (val) {
  val.forEach(role => {
    if (!CONSTANTS.ORG_ROLES.includes(role)) {
      logger.info('Invalid role for organization', role)
      throw new Error('The organization role \'' + role + '\' does not exist.')
    }
  })

  return true
}

function parsePostParams (req, res, next) {
  if (!('body' in req.ctx)) {
    req.ctx.body = {}
  }
  if (!('params' in req.ctx)) {
    req.ctx.params = {}
  }
  if (!('query' in req.ctx)) {
    req.ctx.query = {}
  }
  if (req.body) {
    req.ctx.body = req.body
  }
  if ('shortname' in req.params) {
    req.ctx.params.shortname = req.params.shortname
  }
  if ('username' in req.params) {
    req.ctx.params.username = req.params.username
  }
  if ('shortname' in req.query) {
    req.ctx.query.shortname = req.query.shortname
  }
  if ('name' in req.query) {
    req.ctx.query.name = req.query.name
  }
  if ('id_quota' in req.query) {
    req.ctx.query.id_quota = req.query.id_quota
  }
  if ('active_roles.add' in req.query) {
    req.ctx.query['active_roles.add'] = req.query['active_roles.add']
  }
  if ('active_roles.remove' in req.query) {
    req.ctx.query['active_roles.remove'] = req.query['active_roles.remove']
  }
  if ('active' in req.query) {
    req.ctx.query.active = req.query.active
  }
  if ('new_username' in req.query) {
    req.ctx.query.new_username = req.query.new_username
  }
  if ('new_cna_shortname' in req.query) {
    req.ctx.query.new_cna_shortname = req.query.new_cna_shortname
  }
  if ('name.first' in req.query) {
    req.ctx.query['name.first'] = req.query['name.first']
  }
  if ('name.last' in req.query) {
    req.ctx.query['name.last'] = req.query['name.last']
  }
  if ('name.middle' in req.query) {
    req.ctx.query['name.middle'] = req.query['name.middle']
  }
  if ('name.suffix' in req.query) {
    req.ctx.query['name.suffix'] = req.query['name.suffix']
  }
  if ('name.surname' in req.query) {
    req.ctx.query['name.surname'] = req.query['name.surname']
  }
  next()
}

function parseGetParams (req, res, next) {
  if (!('params' in req.ctx)) {
    req.ctx.params = {}
  }
  if ('shortname' in req.params) {
    req.ctx.params.shortname = req.params.shortname
  }
  if ('username' in req.params) {
    req.ctx.params.username = req.params.username
  }
  next()
}

function parseError (req, res, next) {
  const err = validationResult(req)
  if (!err.isEmpty()) {
    return res.status(400).json(error.badInput(err.array()))
  }
  next()
}

module.exports = {
  parsePostParams,
  parseGetParams,
  parseError,
  isOrgRole
}
