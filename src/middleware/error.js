const idrErr = require('../utils/error')
const CONSTANTS = require('../constants')

class MiddlewareError extends idrErr.IDRError {
  invalidPaginatorPage () { // mw
    const err = {}
    err.error = 'EXCEEDED_PAGINATOR_PAGE_MIN'
    err.message = `Pagination page has a minimum value of ${CONSTANTS.PAGINATOR_VALIDATION.page_min}.`
    return err
  }

  invalidPaginatorLimitMin () { // mw
    const err = {}
    err.error = 'EXCEEDED_PAGINATOR_LIMIT_MIN'
    err.message = `Pagination has a mimimum limit of ${CONSTANTS.PAGINATOR_VALIDATION.limit_min} item(s) per page.`
    return err
  }

  invalidPaginatorLimitMax () { // mw
    const err = {}
    err.error = 'EXCEEDED_PAGINATOR_LIMIT_MAX'
    err.message = `Pagination has a maximum limit of ${CONSTANTS.PAGINATOR_VALIDATION.limit_max} item(s) per page.`
    return err
  }

  badRequest (header) { // mw
    const err = {}
    err.error = 'BAD_REQUEST'
    err.message = `${header} header field required.`
    return err
  }

  unauthorized () { // mw
    const err = {}
    err.error = 'UNAUTHORIZED'
    err.message = 'Unauthorized'
    return err
  }

  secretariatOnly () { // mw
    const err = {}
    err.error = 'SECRETARIAT_ONLY'
    err.message = 'This function is currently only allowed to the Secretariat. This will change for many functions as more administrative roles are implemented.'
    return err
  }

  cnaOnly () { // mw
    const err = {}
    err.error = 'CNA_ONLY'
    err.message = 'This function is currently only allowed to CNAs. This will change for many functions as more administrative roles are implemented.'
    return err
  }
}

module.exports = {
  MiddlewareError
}
