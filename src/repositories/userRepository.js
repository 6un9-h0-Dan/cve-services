const baseRepository = require('./baseRepository')
const User = require('../model/user')
const utils = require('../utils/utils')

class userRepository extends baseRepository {
  constructor () {
    super(User)
  }

  async getUserUUID (userName, orgUUID) {
    return utils.getUserUUID(userName, orgUUID)
  }

  async findOneByUUID (UUID) {
    return this.collection.findOne().byUUID(UUID)
  }

  async findOneByUserNameAndOrgUUID (userName, orgUUID) {
    return this.collection.findOne().byUserNameAndOrgUUID(userName, orgUUID)
  }

  async updateByUserNameAndOrgUUID (username, org_UUID, user, options = {}) {
    if (options) {
      return this.collection.findOneAndUpdate().byUserNameAndOrgUUID(username, org_UUID).updateOne(user).setOptions(options)
    } else {
      return this.collection.findOneAndUpdate().byUserNameAndOrgUUID(username, org_UUID).updateOne(user)
    }
  }
}

module.exports = userRepository
