const baseRepository = require('./baseRepository')
const User = require('../model/user')
const utils = require('../utils/utils')

class userRepository extends baseRepository {
    
    constructor() {
        super(Org)
    }

    async getUserUUID (userName, orgUUID) {
        return utils.getUserUUID(userName, orgUUID)
    }

    async findOneByUUID (UUID) {
        return this.collection.findOne().byUUID(UUID)
    }

    async findOneByUserNameAndOrgUUID (userName, orgUUID) {
        return this.collection.findOne().byUserNameAndOrgUUID(userName, orgUUID)
    }

    async updateByUserNameandOrgUUID (username, org_UUID, user, options = {}) {
        if (options) {
            this.collection.findOneAndUpdate().byUserNameAndOrgUUID(username, org_UUID).updateOne(user).setOptions({ upsert: true })
        } else {
            this.collection.findOneAndUpdate().byUserNameAndOrgUUID(username, org_UUID).updateOne(user)
        }
    }

    async byUserNameAndOrgUUID (userName, orgUUID) {
        this.result = this.result.byUserNameAndOrgUUID(userName, orgUUID)
        return this
    }

}

module.exports = userRepository;