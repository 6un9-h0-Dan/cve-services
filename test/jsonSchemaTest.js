const chai = require('chai')
const chaiHttp = require('chai-http')
chai.use(chaiHttp)

const headers = {
  'content-type': 'application/json',
  'CVE-API-CNA': 'mitre',
  'CVE-API-SUBMITTER': 'cpadro',
  'CVE-API-SECRET': 'jydqjbdjuaygdqiw'
}
const cveRejectPass = require('./schemas/CVE-2017-4024_reject_pass.json')
const cveRejectFail = require('./schemas/CVE-2017-4024_reject_fail.json')

describe('Test Validator for JSON schema 5.0', () => {
  it('Validate a JSON schema REJECT that should pass', (done) => {
    chai.request('http://localhost:3000')
      .post('/api/cve/CVE-2017-4024')
      .set(headers)
      .send(cveRejectPass)
      .end((err, res) => {
        if (err) {
          console.log(err.stack)
        }

        // console.log(res)
        res.should.have.status(200)
        res.should.have.property('text')
        res.text.should.be.a('string')
        res.text.should.equal('CVE-2017-4024 has been updated')
        done()
      })
  })

  it('Validate a JSON schema REJECT that should fail', (done) => {
    chai.request('http://localhost:3000')
      .post('/api/cve/CVE-2017-4024')
      .set(headers)
      .send(cveRejectFail)
      .end((err, res) => {
        if (err) {
          console.log(err.stack)
        }

        // console.log(res)
        res.should.have.status(400)
        res.should.have.property('error')
        res.error.should.have.property('text')
        res.error.text.should.be.a('string')
        res.error.text.should.include('CVE JSON schema validation FAILED')
        // TODO: more specific asserts needed
        done()
      })
  })
})
